# -*- coding: utf-8 -*-
"""DailyLoginCamisa7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nhtgN4xaKSKn6XbB1Ylc9gK9U-rrkdHE
"""

#pip install beautifulsoup4

#pip install Selenium

#!apt-get update
#!apt install chromium-chromedriver
#!cp /usr/lib/chromium-browser/chromedriver /usr/bin

import sys
import yaml

from selenium import webdriver
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.common.exceptions import TimeoutException

from urllib.request import urlopen
from urllib.error import HTTPError
from bs4 import BeautifulSoup

#Loading User and Password

conf = yaml.full_load(open('loginDetails.yml'))
camisa7Email = conf['camisa7_user']['email']
camisa7Password = conf['camisa7_user']['password']

#Checking User and Password

print(camisa7Email)
print(camisa7Password)

#Config webdriver

sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')
wd = webdriver.Chrome('chromedriver',options=chrome_options)

def getPage(url):
  try:
    html = urlopen(url)
  except HTTPError as e:
    return None
  
  try:
    bsObj = BeautifulSoup(html.read())
    page = bsObj
  except AttributeError as e:
    return None
  return page

url = 'https://camisa7.botafogo.com.br/'
DELAY = 10

# open web page
wd.get(url)
#Camisa7 - id = mat-input-2 (email) - id = mat-input-3 (password)
wd.find_element(By.CLASS_NAME, "fengi-user").click()

delay = 8 # seconds
try:
    waitedElement = EC.presence_of_element_located((By.ID, "mat-input-0"))
    WebDriverWait(wd, delay).until(waitedElement)
    wd.find_element(By.ID,"mat-input-0").send_keys(camisa7Email)
    wd.find_element(By.ID,"mat-input-1").send_keys(camisa7Password)
    wd.find_element(By.CLASS_NAME,'login-btn').click()
    
    print("Login DONE!!!")
except TimeoutException:
    print("Loading took too much time!")

page = getPage(url)

if page == None:
  print('Camisa 7 com problemas...')
else:
  print('pagina carregada')

nameList = page.findAll("header", {"class":"header-4"})
print(page.body)

print(len(nameList))
for name in nameList:
  print(name.get_text())

